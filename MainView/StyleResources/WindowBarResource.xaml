<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:MainView.Control">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ButtonWindow" TargetType="Button">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="40" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource WordWhiteBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                </Setter.Value>
            </Setter>-->
                <Setter Property="Background" Value="#FFD2D2D2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuButtonCircle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="4 2" />
        <Setter Property="Tag" Value="Hidden" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundBlueZodiacBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PathStyle"
           TargetType="{x:Type Path}">
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Stretch"
                Value="Uniform" />
    </Style>

    <Style x:Key="ButtonInsidePopupBox"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundDarkSlateBlueBrush}" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          Margin="8" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ForegroundTealishBlueBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>