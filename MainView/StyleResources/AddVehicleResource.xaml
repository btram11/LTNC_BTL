<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--<Style x:Key="RoundThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource BackgroundMainBrush}" Width="5" Height="50" CornerRadius="8"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Track Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource RoundThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <BooleanToVisibilityConverter x:Key="boolToVis"/>
    <!--#region Icon-->
    <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"/>
    </Style>
    <!--#endregion-->

    <!--#region Button-->
    <Style x:Key="menubutton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#87b0b2" />
        <Setter Property="Margin" Value="0 0 5 7" />
        <Setter Property="Height" Value="45" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#7071f0"/>
                <Setter Property="Tag" Value="#7071f0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#87b0b2" />
        <Setter Property="Margin" Value="0 0 5 7" />
        <Setter Property="Height" Value="45" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundTealishBlueBrush}"/>
                <Setter Property="Tag" Value="#7071f0"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,.5" EndPoint="1,.5">
                            <GradientStop Color="#31407b" Offset="0"/>
                            <GradientStop Color="#493585" Offset="3"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#a5a1f9">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="addbutton"
           TargetType="Button">
        <Setter Property="Background"
                Value="#6741d9" />
        <Setter Property="Foreground"
                Value="#ffffff" />
        <Setter Property="Margin"
                Value="0 0 5 7" />
        <Setter Property="Width"
                Value="150" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Grid.Row"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="#ffffff" />
                <Setter Property="Background"
                        Value="#7071f0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menubuttonActive" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#7f7cf1" />
        <Setter Property="Margin" Value="0 0 0 5" />
        <Setter Property="Height" Value="45" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Tag" Value="#7071f0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0 0 0 1" BorderBrush="#7f7cf1">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="topmenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0 12"/>
        <Setter Property="Tag" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="50">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundBlueZodiacBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="buttonIconBorder" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#87b0b2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                        CornerRadius="5" 
                        BorderThickness="1" 
                        BorderBrush="Gray" 
                        Padding="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundTealishBlueBrush}"/>
                <Setter Property="Tag" Value="#7071f0"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,.5" EndPoint="1,.5">
                            <GradientStop Color="#31407b" Offset="0"/>
                            <GradientStop Color="#493585" Offset="3"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#a5a1f9">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#d9d9d9"/>
                <Setter Property="Foreground" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="topmenuButtonIcon" TargetType="Icon:PackIconMaterial">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#edeeee"/>
    </Style>

    <Style x:Key="ReturnButton"  TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#87b0b2" />
        <Setter Property="Height" Value="45" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="5"
                            BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="4 0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF30486A" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="mainBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource BackgroundBlueZodiacBrush}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>

    <Style x:Key="titleText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WordWhiteBrush}"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="titleButton"
           TargetType="Button"
           BasedOn="{StaticResource topmenuButton}">
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Width"
                Value="35" />
        <Setter Property="Height"
                Value="35" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#2e3966" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="combobox" TargetType="ComboBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border Background="#efefef" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="button" TargetType="Button">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#efefef" BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <Style x:Key="checkbox" TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Background" Value="#efefef"/>
        <Setter Property="Foreground" Value="#efefef"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
    </Style>

    <Style x:Key="whitebutton"
           TargetType="Button">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Margin"
                Value="0 0 5 7" />
        <Setter Property="Width"
                Value="150" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Grid.Row"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="#ffffff" />
                <Setter Property="Background"
                        Value="#7071f0" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>